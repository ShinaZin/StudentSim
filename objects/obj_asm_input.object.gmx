<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyboard_string="";
//you are free to change this information
w = 57 //width of textbox (in characters)
h = 33 //height of textbox (in characters)
draw_set_font(font_Rus);
caret_color = c_red
text_color = c_white
comment_color = make_colour_rgb(100,255,100);
selection_color = make_color_rgb(21,107,168)
line_color = make_color_rgb(50,50,50)
backgr_color = make_colour_rgb(30,30,30);

tw = 11//8 //character width
th = 20//12 //character height
ins = 1 //insert mode (0 = overwrite mode)
enabled = false;


//this information does not usually need to be changed
top = 0 //the view
left = 0
size = 0
alarm[0] = 1
px = 0 //the carot
py = 0
tab = -1 //used to check tab repeat rate
sx = 0 //the selection
sy = 0
drag = false
find = "" //last search string
file = ""
saved = true
ll = ds_list_create() //the text (default text set below)

//unsaved text is saved in a temp file between sessions
ml = 0 //length of the longest string
if file_exists("_temp_.txt") {
  var s;
  f = file_text_open_read("_temp_.txt")
  while (!file_text_eof(f)) {
    s = file_text_read_string(f)
    ml = max(ml,string_length(s))
    ds_list_add(ll,s)
    file_text_readln(f)
  }
  file_text_close(f)
  file_delete("_temp_.txt")
  saved = false
} else {
  ds_list_add(ll,"") //default text is ""
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>recalculating bounds every 1 sec</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//recalculating bounds
if(enabled){
  size = 0
  for (m = 0; m &lt; ds_list_size(obj_asm_input.ll); m += 1) {
   size += string_length(ds_list_find_value(obj_asm_input.ll,m)) + 2
  }
  size -= 2
  alarm[1] = room_speed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mx = (mouse_x - x) / tw
my = (mouse_y - y) / th
if mouse_x &gt; x &amp;&amp; mouse_y &gt; y &amp;&amp; mouse_x &lt; x + w*tw &amp;&amp; mouse_y &lt; y + h*th {
  window_set_cursor(cr_beam)
} else { window_set_cursor(cr_default) }

if (enabled == true){
  if keyboard_check_direct(vk_tab) {
    if (tab = -1) {
      tab = room_speed / 2
      keyboard_string += ""
    }
    else tab = max(0,tab - 1)
    if (tab = 0) {
      keyboard_string += ""
      tab = 2
    }
  } else { tab = -1 }
  
  if keyboard_string != '' {
   if (sy != py || sx != px) {
    delete(0,0,0,0)
   } else if (!ins) {
    delete(py,px,py,px+1)
   }
   insert(keyboard_string,py,px,true)
   keyboard_string = ''
   saved = false
   view_caret()
  }
  
  if ds_list_find_value(ll,0) = "" &amp;&amp; ds_list_size(ll) = 1 &amp;&amp; file = "" {
    saved = true
  }
  
//
  if (drag) {
   if (!mouse_check_button(mb_left)) { drag = false }
   py = max(0,min(floor(my+top),ds_list_size(ll) - 1))
   px = max(0,min(round(mx+left),string_length(ds_list_find_value(ll,py))))
   view_caret()
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="86">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled){
  if !keyboard_check(vk_control) exit
  keyboard_clear(ord("V"))
  saved = false
  if (px != sx || py != sy) delete(0,0,0,0)
  insert(clipboard_get_text(),py,px,true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="46">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled == true){
  keyboard_clear(vk_delete)
  saved = false
  if (sx != px || sy != py) {
   delete(0,0,0,0)
   exit
  }
  if px = string_length(ds_list_find_value(ll,py)) {
   if py = ds_list_size(ll) - 1 { exit }
   delete(py,px,py+1,0)
   exit
  }
  ds_list_replace(ll,py,string_delete(ds_list_find_value(ll,py),px+1,1))
  view_caret()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled == true){
  keyboard_clear(vk_down)
  if keyboard_check(vk_control) {
   top = max(0,min(top + 1, ds_list_size(ll) - h))
   exit
  }
  if py = ds_list_size(ll) - 1 { exit }
  py += 1
  px = min(px,string_length(ds_list_find_value(ll,py)))
  if (!keyboard_check(vk_shift)) {
   sx = px
   sy = py
  }
  view_caret()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled == true){
  keyboard_clear(vk_right)
  if px = string_length(ds_list_find_value(ll,py)) &amp;&amp; py = ds_list_size(ll)-1 {
   exit
  }
  
  if keyboard_check(vk_control) {
   str = ds_list_find_value(ll,py)
   if px = string_length(str) {
    if (py != ds_list_size(ll) - 1) {
     py += 1
     px = 0
    }
    if !keyboard_check(vk_shift) {
     sy = py
     sx = px
    }
    view_caret()
    exit
   }
   str2 = string_copy(str,px + 1,string_length(str) - px - 1)
   if string_count(" ",str2) = 0 {
    px = string_length(str)
    if !keyboard_check(vk_shift) {
     sy = py
     sx = px
    }
    view_caret()
    exit
   }
   px += string_pos(" ",str2)
   if !keyboard_check(vk_shift) {
    sy = py
    sx = px
   }
   view_caret()
   exit
  }
  
  px += 1
  if px &gt; string_length(ds_list_find_value(ll,py)) {
   py += 1
   px = 0
  }
  if (!keyboard_check(vk_shift)) {
   sx = px
   sy = py
  }
  view_caret()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled == true){
  keyboard_clear(vk_up)
  if keyboard_check(vk_control) {
   top = max(0,top - 1)
   exit
  }
  if py = 0 { exit }
  py -= 1
  px = min(px,string_length(ds_list_find_value(ll,py)))
  if (!keyboard_check(vk_shift)) {
   sx = px
   sy = py
  }
  view_caret()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled == true){
keyboard_clear(vk_left)
  if px = 0 &amp;&amp; py = 0 { exit }
  if keyboard_check(vk_control) {
   if (px = 0) {
    py -= 1
    px = string_length(ds_list_find_value(ll,py))
    if !keyboard_check(vk_shift) {
     sy = py
     sx = px
    }
    view_caret()
    exit
   }
   str = string_copy(ds_list_find_value(ll,py),1,px - 1)
   if string_count(" ",str) = 0 {
    px = 0
    if !keyboard_check(vk_shift) {
     sy = py
     sx = px
    }
    view_caret()
    exit
   }
   while string_count(" ",str) &gt; 1 {
    str = string_replace(str," ","_")
   }
   px = string_pos(" ",str)
   if !keyboard_check(vk_shift) {
    sy = py
    sx = px
   }
   view_caret()
   exit
  }
  px -= 1
  if px = -1 {
   py -= 1
   px = string_length(ds_list_find_value(ll,py))
  }
  if (!keyboard_check(vk_shift)) {
   sx = px
   sy = py
  }
  view_caret()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled == true){
  keyboard_clear(vk_enter)
  saved = false
  if (px != sx || py != sy) delete(0,0,0,0)
  insert(chr(10),py,px,true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled) {
  keyboard_clear(vk_backspace)
  saved = false
  if (sx != px || sy != py) {
   delete(0,0,0,0)
   exit
  }
  if px = 0 {
   if py = 0 { exit }
   delete(py-1,string_length(ds_list_find_value(ll,py-1)),py,0)
   exit
  }
  delete(py,px-1,py,px)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled){
  if keyboard_check(vk_control)
   left = max(0,min(left + 5, ml - w + 1))
  else
   top = max(0,min(top + 3,ds_list_size(ll)-h))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled){
  if keyboard_check(vk_control)
   left = max(0,left - 5)
  else
   top = max(0,top - 3)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyboard_string='';
enabled = false;
if (mouse_x &gt; x &amp;&amp; mouse_y &gt; y &amp;&amp; 
    mouse_x &lt; x + w*tw &amp;&amp; mouse_y &lt; y + h*th)
    enabled = true;
if (enabled){
  if window_get_cursor() = cr_beam {
   drag = true
   py = min(floor(my+top),ds_list_size(ll) - 1)
   px = min(round(mx+left),string_length(ds_list_find_value(ll,py)))
  
   if py &lt; top { top = py }
   if py &gt; top + h - 1 { top = py - h + 1 }
   if px &lt; left { left = px }
   if px &gt; left + w - 1 { left = px - w + 1 }
   if (!keyboard_check(vk_shift)) {
    sy = py
    sx = px
   }
   view_caret()
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (saved) {
 if file_exists("_temp_.txt")
  file_delete("_temp_.txt")
 exit
}

f = file_text_open_write("_temp_.txt")
for (m = 0; m &lt; ds_list_size(ll); m += 1) {
 file_text_write_string(f,ds_list_find_value(ll,m))
 if m &lt; ds_list_size(ll) - 1 { file_text_writeln(f) }
}
file_text_close(f)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_Code);
//background
draw_set_color(backgr_color)
draw_rectangle(x-2,y+1,x+w*tw,y+h*th+2,false)
//borders
draw_set_color($3b3b3b)
draw_line(x-2,y+1,x+w*tw,y+1)  //horiz
draw_line(x-2,y+1,x-2,y+h*th+2)//vert
//cursor position x,y
draw_set_color(text_color);
draw_set_halign(fa_right)
draw_text(x+w*tw,y+h*th+5, string(px)+', '+string(py))
draw_set_halign(fa_left)
draw_text(x+w*tw,y+h*th+5, '/'+string(ds_list_size(ll)-1))
//draw selection
draw_set_color(line_color)
if (py &gt;= top &amp;&amp; py &lt; top + h)
 draw_rectangle(x-1,y+(py-top)*th+2,x+w*tw,y+(py-top+1)*th+2,false)
draw_set_color(selection_color)
draw_selection()
//draw caret
if (enabled){
  draw_set_color(caret_color)
  if (py &gt;= top &amp;&amp; py &lt; top + h &amp;&amp; px &gt;= left &amp;&amp; px &lt; left + w) {
   if ins = 1
    draw_text(x+(px-left)*tw-tw/3,y+(py-top)*th,'|')
   else
    draw_text(x+(px-left)*tw-tw/3,y+(py-top)*th,'_')
  }
}
//text drawing
for (m = top; m &lt; min(top + h,ds_list_size(ll)); m += 1) {
 var txt;
 txt = string_copy(ds_list_find_value(ll,m),left+1,w)
 txt = string_replace_all(txt,'#','\#')
 txt = string_replace_all(txt,"","?")
 draw_set_color(text_color);
 draw_text(x-tw*4,y+(m-top)*th,string_pad_left( string(m),' ',3 ));//line nums
 draw_text_colored(x,y+(m-top)*th,txt);
 //draw_text(x,y+(m-top)*th,txt) //text
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled){
  if !keyboard_check(vk_control) exit
  if (px = sx &amp;&amp; py = sy) exit
  
  clipboard_set_text(copy(0,0,0,0))
  delete(0,0,0,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled){
  if !keyboard_check(vk_control) exit
  if (px = sx &amp;&amp; py = sy) exit
  
  clipboard_set_text(copy(0,0,0,0))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled){
  if !keyboard_check(vk_control) exit
  
  sx = 0
  sy = 0
  py = ds_list_size(ll) - 1
  px = string_length(ds_list_find_value(ll,py))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="36">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled){
  px = 0
  if keyboard_check(vk_control) { py = 0 }
  if (!keyboard_check(vk_shift)) {
   sx = px
   sy = py
  }
  view_caret()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="35">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (enabled){
  if keyboard_check(vk_control) { py = ds_list_size(ll) - 1 }
  px = string_length(ds_list_find_value(ll,py))
  if (!keyboard_check(vk_shift)) {
   sx = px
   sy = py
  }
  view_caret()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enabled = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
