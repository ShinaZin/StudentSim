<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_but_start</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_but</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Структуры для парсинга
commands = ds_list_create();
operands = ds_list_create();
modrms = ds_list_create();
labels = ds_map_create()

// Структуры и переменные для интерпетации
memsize = 256;
for (var i=0; i&lt;memsize; i++ )
{
  mem[i]=0;
}
pc=0;
rx=0;

data_inp = ds_list_create();
data_out = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var textbox=obj_asm_input;
data_out="";
ds_list_clear(commands);
ds_list_clear(operands);
ds_list_clear(modrms);
ds_map_clear(labels);


//Парсим все строки из поля ввода obj_asm_input
for (var i = 0; i &lt; ds_list_size(textbox.ll); i++) {
  line_num = i;// Для обработки ошибок
  var line, words;
  var label="",command="", modrm="", op="";
  line = string_copy(ds_list_find_value(textbox.ll,i),1,textbox.w)
  if (line != ""){
    line = string_replace_all(line,'#','\#')
    line = string_replace_all(line,"","?")// dont need
    line = parse_comment_remove(line); 
    line = parse_label_add_space(line); //добалвяет ' ' после &lt;метка:&gt; 
    words = string_split(line,' ');
    
    label  = parse_label(words);
    command= parse_command(words);
    op     = parse_operand(words);
    modrm  = parse_modrm(op);
    op = string_delete(op,string_pos('[',op),1);
    op = string_delete(op,string_pos(']',op),1);
    

    if (label != ""){
      if(command != "") {//if label: command
        ds_list_add(commands,command);
        ds_list_add(operands,op);
        ds_list_add(modrms,modrm);
        ds_map_add(labels,label,ds_list_size(commands)-1);//+-1?
      }
      else //if label:
        ds_map_add(labels,label,ds_list_size(commands));
    } else {// if no label
      if(command != ""){// and command exist
        ds_list_add(commands,command);
        ds_list_add(operands,op);
        ds_list_add(modrms,modrm);
      }      
    }
    
    show_debug_message(string_pad_left( string(i),' ',3 )+": "+line); //вывод в консоль GM
  }//if
}//for

// Последняя команда всегда HALT:
ds_list_add(commands,"HALT");
ds_list_add(operands,"");
ds_list_add(modrms,"RM.None");
//ds_list_show(commands);
//ds_list_show(operands);
//ds_list_show(modrms);
//ds_map_show(labels);
// Конец парсинга строк

// Парсим входные данные
var str  = ds_list_find_value(obj_asm_data_in.ll,0);
var list = string_split(str,' ');
data_inp = ds_list_to_queue(list);//

// Запускаем исполнение основного цикла программы
asm_start_cycle();

// Выводим данные 
ds_list_replace(obj_asm_data_out.ll,0,"");
with (obj_asm_data_out) {
  px = 0;
  if (px != sx || py != sy) delete(0,0,0,0)
  insert(other.data_out,py,px,true)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
